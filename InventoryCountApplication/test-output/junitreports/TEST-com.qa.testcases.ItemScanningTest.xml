<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="25" hostname="DESKTOP-3GNVT0U" name="com.qa.testcases.ItemScanningTest" tests="27" failures="0" timestamp="28 Sep 2020 11:14:14 GMT" time="49.610" errors="1">
  <testcase name="setUp" time="24.198" classname="com.qa.testcases.ItemScanningTest">
    <error type="org.openqa.selenium.SessionNotCreatedException" message="session not created
from no such window: window was already closed
  (Session info: chrome=85.0.4183.121)
Build info: version: &#039;4.0.0-alpha-3&#039;, revision: &#039;8c567de6dc&#039;
System info: host: &#039;DESKTOP-3GNVT0U&#039;, ip: &#039;172.20.10.2&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_261&#039;
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x0059D343+3134275]
	Ordinal0 [0x0048A131+2007345]
	Ordinal0 [0x0032AEC8+569032]
	Ordinal0 [0x00322054+532564]
	Ordinal0 [0x00322C15+535573]
	Ordinal0 [0x0031DFC5+516037]
	Ordinal0 [0x0032BF50+573264]
	Ordinal0 [0x002D1916+203030]
	Ordinal0 [0x002D0C1D+199709]
	Ordinal0 [0x002CEB0B+191243]
	Ordinal0 [0x002B2E77+77431]
	Ordinal0 [0x002B3E3E+81470]
	Ordinal0 [0x002B3DC9+81353]
	Ordinal0 [0x004A0C99+2100377]
	GetHandleVerifier [0x0070B71A+1396954]
	GetHandleVerifier [0x0070B399+1396057]
	GetHandleVerifier [0x007170E6+1444518]
	GetHandleVerifier [0x0070BCA8+1398376]
	Ordinal0 [0x00497F11+2064145]
	Ordinal0 [0x004A22AB+2106027]
	Ordinal0 [0x004A23D1+2106321]
	Ordinal0 [0x004B4984+2181508]
	BaseThreadInitThunk [0x75A06359+25]
	RtlGetAppContainerNamedObjectPath [0x77DC7C24+228]
	RtlGetAppContainerNamedObjectPath [0x77DC7BF4+180]
">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created
from no such window: window was already closed
  (Session info: chrome=85.0.4183.121)
Build info: version: '4.0.0-alpha-3', revision: '8c567de6dc'
System info: host: 'DESKTOP-3GNVT0U', ip: '172.20.10.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x0059D343+3134275]
Ordinal0 [0x0048A131+2007345]
Ordinal0 [0x0032AEC8+569032]
Ordinal0 [0x00322054+532564]
Ordinal0 [0x00322C15+535573]
Ordinal0 [0x0031DFC5+516037]
Ordinal0 [0x0032BF50+573264]
Ordinal0 [0x002D1916+203030]
Ordinal0 [0x002D0C1D+199709]
Ordinal0 [0x002CEB0B+191243]
Ordinal0 [0x002B2E77+77431]
Ordinal0 [0x002B3E3E+81470]
Ordinal0 [0x002B3DC9+81353]
Ordinal0 [0x004A0C99+2100377]
GetHandleVerifier [0x0070B71A+1396954]
GetHandleVerifier [0x0070B399+1396057]
GetHandleVerifier [0x007170E6+1444518]
GetHandleVerifier [0x0070BCA8+1398376]
Ordinal0 [0x00497F11+2064145]
Ordinal0 [0x004A22AB+2106027]
Ordinal0 [0x004A23D1+2106321]
Ordinal0 [0x004B4984+2181508]
BaseThreadInitThunk [0x75A06359+25]
RtlGetAppContainerNamedObjectPath [0x77DC7C24+228]
RtlGetAppContainerNamedObjectPath [0x77DC7BF4+180]

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$1(ProtocolHandshake.java:127)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:499)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:486)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:129)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:139)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:210)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:130)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:75)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:163)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:150)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:105)
at com.qa.util.TestBase.initilizaton(TestBase.java:34)
at com.qa.util.TestUtil.setUp(TestUtil.java:17)
at com.qa.testcases.ItemScanningTest.setUp(ItemScanningTest.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- setUp -->
  <testcase name="bin_Mismatch" time="25.412" classname="com.qa.testcases.ItemScanningTest"/>
  <testcase name="Processing_without_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_without_bins -->
  <testcase name="Processing_without_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_without_bins -->
  <testcase name="Processing_without_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_without_bins -->
  <testcase name="Processing_without_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_without_bins -->
  <testcase name="Processing_without_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_without_bins -->
  <testcase name="Processing_without_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_without_bins -->
  <testcase name="Processing_without_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_without_bins -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="invalid_Data" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- invalid_Data -->
  <testcase name="Without_serial_nrs" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Without_serial_nrs -->
  <testcase name="Without_serial_nrs" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Without_serial_nrs -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
  <testcase name="Processing_with_bins" time="0.000" classname="com.qa.testcases.ItemScanningTest">
    <skipped/>
  </testcase> <!-- Processing_with_bins -->
</testsuite> <!-- com.qa.testcases.ItemScanningTest -->
